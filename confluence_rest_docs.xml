<?xml version='1.0' encoding='utf-8'?>
<documentation source="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>audit</title><description>Fetch a paginated list of AuditRecord instances dating back to a certain time</description><methods><method name="Get audit recordsGET /rest/audit"><description>Fetch a paginated list of AuditRecord instances dating back to a certain time</description></method><method name="Store recordPOST /rest/audit" /><method name="ExportGET /rest/audit/export"><description>Default:csv</description></method><method name="Get retention periodGET /rest/audit/retention"><description>Fetches the current retention period</description></method><method name="Set retention periodPUT /rest/audit/retention"><description>Set the retention period to a new value. Can throw ServiceException if the retention period is too long</description></method><method name="Get audit recordsGET /rest/audit/since"><description>Fetch a paginated list of AuditRecord instances dating back to a certain time</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content</title><description>Creates a new piece of Content or publishes the draft if the content id is present.For the case publishing draft, a new piece of content will be created and
                                 all metadata from the draft will be transferred into the newly created content.</description><methods><method name="Create contentPOST /rest/content"><description>Creates a new piece of Content or publishes the draft if the content id is present.For the case publishing draft, a new piece of content will be created and
                                 all metadata from the draft will be transferred into the newly created content.</description></method><method name="Get contentGET /rest/content"><description>Returns a paginated list of Content.Example request URI(s):http://example.com/rest/api/content?spaceKey=TST&amp;title=Cheese&amp;expand=space,body.view,version,containerhttp://example.com/rest/api/content?type=blogpost&amp;spaceKey=TST&amp;title=Bacon&amp;postingDay=2014-02-13&amp;expand=space,body.view,version,containerRequestquery parametersparametertypedescriptiontypestringDefault:pagethe content type to return. Default value:page. Valid values:page, blogpost.spaceKeystringthe space key to find content under.titlestringthe title of the page to find. Required forpagetype.statusstringlist of statuses the content to be found is in. Defaults to current is not specified.
                                          If set to 'any', content in 'current' and 'trashed' status will be fetched.
                                          Does not support 'historical' status for now.postingDaystringthe posting day of the blog post. Required forblogposttype. Format:yyyy-mm-dd. Example:2013-02-13expandstringDefault:a comma separated list of properties to expand on the content. Default value:history,space,version.startintthe start point of the collection to returnlimitintDefault:25the limit of the number of items to return, this may be restricted by fixed system limitsResponsesStatus
                                                   200-application/jsonExample{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.153Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234"}}Returns a full JSON representation of a list of contentStatus
                                                   404Returned if the calling user does not have permission to view the content.</description></method><method name="UpdatePUT /rest/content/{contentId}"><description>Updates a piece of Content, including changes to content statusTo update a piece of content you must increment the version.number, supplying the number of the version you are creating.
                                 The title property can be updated on all content, body can be updated on all content that has a body (not attachments).
                                 For instance to update the content of a blogpost that currently has version 1:PUT /rest/api/content/456{
                                 "version":{
                                 "number": 2
                                 },
                                 "title":"My new title",
                                 "type":"page",
                                 "body":{
                                 "storage":{
                                 "value":"&lt;p&gt;New page data.&lt;/p&gt;",
                                 "representation":"storage"
                                 }
                                 }
                                 }To update a page and change its parent page, supply the ancestors property with the request with the parent as
                                 the first ancestor i.e. to move a page to be a child of page with ID 789:PUT /rest/api/content/456{
                                 "version":{
                                 "number": 2
                                 },
                                 "ancestors": [{"id":789}],
                                 "type":"page",
                                 "body":{
                                 "storage":{
                                 "value":"&lt;p&gt;New page data.&lt;/p&gt;",
                                 "representation":"storage"
                                 }
                                 }
                                 }Changing statusTo restore a piece of content that has the status of trashed the content must have it's version
                                 incremented, and status set to current. No other field modifications will be performed when restoring
                                 a piece of content from the trash.Request example to restore from trash:{"id": "557059","status": "current","version": {"number": 2}}If the content you're updating has a draft, specifying status=draft will delete that draft and the body of
                                 the content will be replaced with the body specified in the request.Request example to delete a draft:PUT:  http://localhost:9096/confluence/rest/api/content/2149384202?status=draft{
                                 "id":"2149384202",
                                 "status":"current",
                                 "version":{
                                 "number":4
                                 },
                                 "space":{
                                 "key":"TST"
                                 },
                                 "type":"page",
                                 "title":"page title",
                                 "body":{
                                 "storage":{
                                 "value":"&lt;p&gt;New page data.&lt;/p&gt;",
                                 "representation":"storage"
                                 }
                                 }
                                 }Updating a draft is not currently supported.Requestquery parametersparametertypedescriptionstatusstringthe existing status of the content to be updated.conflictPolicystringDefault:abortExample{"id":"3604482","type":"page","status":"current","title":"Example Content title","space":{"key":"TST","metadata":{}},"version":{"number":2,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"body":{"storage":{"value":"&lt;p&gt;This is the updated text for the new page&lt;/p&gt;","representation":"storage"}},"metadata":{},"restrictions":{}}ResponsesStatus
                                                   200-application/jsonExample{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.153Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234"}}Returns a full JSON representation of a piece of contentStatus
                                                   400if no space or no content type, or setup a wrong version type set to content,
                                             or status param is not draft and status content is currentStatus
                                                   404if can not find draft with current content</description></method><method name="Get content by idGET /rest/content/{id}"><description>Returns a piece of Content.Example request URI(s):http://example.com/rest/api/content/1234?expand=space,body.view,version,containerhttp://example.com/rest/api/content/1234?status=anyRequestquery parametersparametertypedescriptionstatusstringlist of Content statuses to filter results on. Default value:[current]versionintexpandstringDefault:history,space,versionA comma separated list of properties to expand on the content. Default value:history,space,versionWe can also specify some extensions such asextensions.inlineProperties(for getting inline comment-specific
                                          properties)
                                          orextensions.resolutionfor the resolution status of each comment in the resultsResponsesStatus
                                                   200-application/jsonExample{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.153Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234"}}Returns a full JSON representation of a piece of contentStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="DeleteDELETE /rest/content/{id}"><description>Trashes or purges a piece of Content, based on its {@link ContentType} and {@link ContentStatus}.There are three cases:If the content is trashable and its status is {@link ContentStatus#CURRENT}, it will be trashed.If the content is trashable, its status is {@link ContentStatus#TRASHED} and the "status" query parameter in the request is
                                 "trashed",
                                 the content will be purged from the trash and deleted permanently.If the content is not trashable it will be deleted permanently without being trashed.Requestquery parametersparametertypedescriptionstatusstringthe status of the content to be deletedResponsesStatus
                                                   200-application/jsonReturned if successfully trashed.Status
                                                   204Returned if successfully purged.Status
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             trash or purge the content.Status
                                                   409Returned if there is a stale data object conflict when trying to delete a draft</description></method><method name="Get historyGET /rest/content/{id}/history"><description>Returns the history of a particular piece of contentExample request URI(s):http://example.com/rest/api/content/1234/historyRequestquery parametersparametertypedescriptionexpandstringDefault:previousVersion,nextVersion,lastUpdatedthe properties on content history to expandResponsesStatus
                                                   200-application/jsonReturns a full JSON representation of the content's historyStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Get macro body by hashGET /rest/content/{id}/history/{version}/macro/hash/{hash}"><description>Returns the body of a macro (in storage format) with the given hash.  This resource is primarily used by connect
                                 applications that require the body of macro to perform their work.The hash is generated by connect during render time of the local macro holder and is usually only relevant during
                                 the scope of one request.  For optimisation purposes, this hash will usually live for multiple requests.Collecting a macro by its hash should now be considered deprecated and will be replaced, transparently with
                                 macroIds.  This resource is currently only called from connect addons which will eventually all use the
                                 {@link #getContentById(com.atlassian.confluence.api.model.content.id.ContentId, java.util.List, Integer, String)}
                                 resource.To make the migration as seamless as possible, this resource will match macros against a generated hash or
                                 a stored macroId.  This will allow add ons to work during the migration period.ResponsesStatus
                                                   200-application/jsonExample{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.416Z","message":"initial edit","number":1,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"storage":{"value":"&lt;h1&gt;Example&lt;/h1&gt;&lt;ac:macro ac:name=\"macro\"&gt;&lt;ac:rich-text-body&gt;&lt;p&gt;This is the body of a macro.&lt;/p&gt;&lt;/ac:rich-text-body&gt;&lt;/ac:macro&gt;","representation":"storage","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234"}}Returns a json representation of a macro.Status
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content, or there is no macro matching the given hash or id.</description></method><method name="Get macro body by macro idGET /rest/content/{id}/history/{version}/macro/id/{macroId}"><description>Returns the body of a macro (in storage format) with the given id.  This resource is primarily used by connect
                                 applications that require the body of macro to perform their work.When content is created, if no macroId is specified, then Confluence will generate a random id.  The id is
                                 persisted as the content is saved and only modified by Confluence if there are conflicting IDs.To preserve backwards compatibility this resource will also match on the hash of the macro body, even if a macroId
                                 is found.  This check will become redundant as pages get macroId's generated for them and transparently
                                 propagate out to all instances.ResponsesStatus
                                                   200-application/jsonExample{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.416Z","message":"initial edit","number":1,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"storage":{"value":"&lt;h1&gt;Example&lt;/h1&gt;&lt;ac:macro ac:name=\"macro\"&gt;&lt;ac:rich-text-body&gt;&lt;p&gt;This is the body of a macro.&lt;/p&gt;&lt;/ac:rich-text-body&gt;&lt;/ac:macro&gt;","representation":"storage","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234"}}Returns a json representation of a macro.Status
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content, or there is no macro matching the given id or hash.</description></method><method name="SearchGET /rest/content/search"><description>Fetch a list of content using the Confluence Query Language (CQL).
                                 See :Advanced searching using CQLFor example :Example request URI(s):http://localhost:8080/confluence/rest/api/content/search?cql=creator=currentUser()&amp;cqlcontext={%22spaceKey%22:%22TST%22,
                                 %22contentId%22:%2255%22}http://localhost:8080/confluence/rest/api/content/search?cql=space=DEV%20AND%20label=docs&amp;expand=space,metadata.labels&amp;limit=10</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content/{id}/child</title><description>REST wrapper for the {@link ChildContentService}.</description><methods><method name="ChildrenGET /rest/content/{id}/child"><description>Returns a map of the direct children of a piece of Content. Content can have multiple types of children - for example a
                                 Page can have children that are also Pages, but it can also have Comments and Attachments.The {@link ContentType}(s) of the children returned is specified by the "expand" query parameter in the request
                                 - this parameter can include expands for multiple child types.If no types are included in the expand parameter, the map returned will just list the child types that are available
                                 to be expanded for the {@link Content} referenced by the "id" path parameter.Example request URI(s):http://example.com/rest/api/content/1234/childhttp://example.com/rest/api/content/1234/child?expand=page.body.VIEWhttp://example.com/rest/api/content/1234/child?expand=page&amp;start=20&amp;limit=10Requestquery parametersparametertypedescriptionexpandstringDefault:a comma separated list of properties to expand on the childrenparentVersionintDefault:0an int representing the version of the content to retrieve children forstartintlimitintDefault:25ResponsesStatus
                                                   200-application/jsonExample{"page":{"results":[{"id":"1234","type":"page","status":"current","title":"Example Content title","links":{},"space":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"history":null,"version":{"by":{"type":"known","username":"username","displayName":"Full Name","userKey":"","status":null},"when":"2017-12-11T03:52:47.431Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false,"content":null},"ancestors":[{"id":"123","type":"page","status":"current","links":{},"space":null,"history":null,"version":null,"ancestors":[],"operations":[],"children":{},"descendants":{},"container":null,"body":{},"metadata":{},"extensions":{},"restrictions":{}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"body":{"view":{"representation":"view","value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","webresource":null,"content":null}},"metadata":{},"extensions":{},"restrictions":{}}],"size":1}}Returns a JSON map representing multiple ordered collections of content children, keyed by content typeStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Children of typeGET /rest/content/{id}/child/{type}"><description>Returns the direct children of a piece of Content, limited to a single child type.The {@link ContentType}(s) of the children returned is specified by the "type" path parameter in the request.Example request URI(s):http://example.com/rest/api/content/1234/child/pagehttp://example.com/rest/api/content/1234/child/commenthttp://example.com/rest/api/content/1234/child/page?expand=body.viewhttp://example.com/rest/api/content/1234/child/comment?start=20&amp;limit=10Requestquery parametersparametertypedescriptionexpandstringDefault:a comma separated list of properties to expand on the childrenparentVersionintDefault:0an int representing the version of the content to retrieve children forstartint(optional, default: 0) the index of the first item within the result set that should be returnedlimitintDefault:25(optional, default: site limit) how many items should be returned after the start indexResponsesStatus
                                                   200-application/jsonExample{"page":{"results":[{"id":"1234","type":"page","status":"current","title":"Example Content title","links":{},"space":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"history":null,"version":{"by":{"type":"known","username":"username","displayName":"Full Name","userKey":"","status":null},"when":"2017-12-11T03:52:47.431Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false,"content":null},"ancestors":[{"id":"123","type":"page","status":"current","links":{},"space":null,"history":null,"version":null,"ancestors":[],"operations":[],"children":{},"descendants":{},"container":null,"body":{},"metadata":{},"extensions":{},"restrictions":{}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"body":{"view":{"representation":"view","value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","webresource":null,"content":null}},"metadata":{},"extensions":{},"restrictions":{}}],"size":1}}Returns a JSON map representing multiple ordered collections of content children, keyed by content typeStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Comments of contentGET /rest/content/{id}/child/comment"><description>Returns the comments of a contentExample request URI(s):http://example.com/rest/api/content/1234/child/commenthttp://example.com/rest/api/content/1234/child/comment?expand=body.viewhttp://example.com/rest/api/content/1234/child/comment?start=20&amp;limit=10http://example.com/rest/api/content/1234/child/comment?location=footer&amp;location=inline&amp;location=resolvedhttp://example.com/rest/api/content/1234/child/comment?expand=extensions.inlineProperties,extensions.resolutionRequestquery parametersparametertypedescriptionexpandstringDefault:a comma separated list of properties to expand on the children.
                                          We can also specify some extensions such asextensions.inlineProperties(for getting inline comment-specific
                                          properties)
                                          orextensions.resolutionfor the resolution status of each comment in the resultsparentVersionintDefault:0an int representing the version of the content to retrieve children forstartint(optional, default: 0) the index of the first item within the result set that should be returnedlimitintDefault:25(optional, default: site limit) how many items should be returned after the start indexlocationstring(optional, default: "" means all) the location of the comments. Possible values are: "inline", "footer", "resolved".
                                          You can define multiple location params. The results will be the comments matched by any location.depthstringDefault:(optional, default: "") the depth of the comments. Possible values are: "" (ROOT only), "all"ResponsesStatus
                                                   200-application/jsonExample{"page":{"results":[{"id":"1234","type":"page","status":"current","title":"Example Content title","links":{},"space":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"history":null,"version":{"by":{"type":"known","username":"username","displayName":"Full Name","userKey":"","status":null},"when":"2017-12-11T03:52:47.431Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false,"content":null},"ancestors":[{"id":"123","type":"page","status":"current","links":{},"space":null,"history":null,"version":null,"ancestors":[],"operations":[],"children":{},"descendants":{},"container":null,"body":{},"metadata":{},"extensions":{},"restrictions":{}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"body":{"view":{"representation":"view","value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","webresource":null,"content":null}},"metadata":{},"extensions":{},"restrictions":{}}],"size":1}}Returns a JSON map representing multiple ordered collections of content children, keyed by content typeStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content/{id}/child/attachment</title><description>CRUD operations for Attachments on Content.</description><methods><method name="Get attachmentsGET /rest/content/{id}/child/attachment"><description>Returns a paginated list of attachment Content entities within a single container.Example request URI(s):http://example.com/rest/api/content/1234/child/attachment?start=0&amp;limit=10http://example.com/rest/api/content/1234/child/attachment?filename=myfile.txt&amp;expand=version,containerRequestquery parametersparametertypedescriptionexpandstringDefault:a comma separated list of properties to expand on the Attachments returned. Optional.startintthe index of the first item within the result set that should be returned. Optional.limitintDefault:50how many items should be returned after the start index. Optional.filenamestring(optional) filter parameter to return only the Attachment with the matching file name. Optional.mediaTypestring(optional) filter parameter to return only Attachments with a matching Media-Type. Optional.ResponsesStatus
                                                   200-application/jsonExample{"results":[{"id":"att5678","type":"attachment","status":"current","title":"myfile.txt","version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.483Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"container":{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.483Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234"}},"body":{},"metadata":{"comment":"This is my File","mediaType":"text/plain"},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/att5678"}}],"size":1,"_links":{"base":"http://myhost:8080/confluence","context":"/confluence"}}Returns a JSON representation of a list of attachment Content entitiesStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Create attachmentsPOST /rest/content/{id}/child/attachment"><description>Add one or more attachments to a Confluence Content entity, with optional comments.Comments are optional, but if included there must be as many comments as there are files, and the comments
                                 must be in the same order as the files.This resource expects a multipart post. The media-type multipart/form-data is defined in RFC 1867. Most client
                                 libraries have classes that make dealing with multipart posts simple. For instance, in Java the Apache HTTP Components
                                 library provides aMultiPartEntitythat makes it simple to submit a multipart POST.In order to protect against XSRF attacks, because this method accepts multipart/form-data, it has XSRF protection
                                 on it.  This means you must submit a header of X-Atlassian-Token: nocheck with the request, otherwise it will be
                                 blocked.The name of the multipart/form-data parameter that contains attachments must be "file"A simple example to attach a file called "myfile.txt" to the container with id "123", with a comment included:curl -D- -u admin:admin -X POST -H "X-Atlassian-Token: nocheck" -F "file=@myfile.txt" -F "comment=This is my File" http://myhost/rest/api/content/123/child/attachmentA example to attach a file called "myfile.txt" to the container with id "123", with a comment, and set the minorEdits flag
                                 to be true:curl -D- -u admin:admin -X POST -H "X-Atlassian-Token: nocheck" -F "file=@myfile.txt" -F "minorEdit=true" -F "comment=This
                                 is my File" http://myhost/rest/api/content/123/child/attachmentAn example to attach the same file, with no comment:curl -D- -u admin:admin -X POST -H "X-Atlassian-Token: nocheck" -F "file=@myfile.txt" http://myhost/rest/api/content/123/child/attachmentExample request URI(s):http://example.com/rest/api/content/1234/child/attachmentRequestquery parametersparametertypedescriptionstatusstringDefault:currenta string containing the status of the attachments content container,
                                          supports current or draft, defaults to currentResponsesStatus
                                                   200-application/jsonExample{"results":[{"id":"att5678","type":"attachment","status":"current","title":"myfile.txt","version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.483Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"container":{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.483Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234"}},"body":{},"metadata":{"comment":"This is my File","mediaType":"text/plain"},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/att5678"}}],"size":1,"_links":{"base":"http://myhost:8080/confluence","context":"/confluence"}}Status
                                                   403Returned if attachments is disabled or if you don't have permission to add attachments to this content.Status
                                                   404Returned if the requested content is not found, the user does not have permission to view it, or if the
                                             attachments exceeds the maximum configured attachment size.</description></method><method name="UpdatePUT /rest/content/{id}/child/attachment/{attachmentId}"><description>Update the non-binary data of an Attachment.This resource can be used to update an attachment's filename, media-type, comment, and parent container.Example request URI(s):http://example.com/rest/api/content/1234/child/attachment/5678RequestExample{"id":"att5678","type":"attachment","status":"current","title":"new_file_name.txt","version":{"number":2,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{}}ResponsesStatus
                                                   200-application/jsonExample{"id":"att5678","type":"attachment","status":"current","title":"myfile.txt","version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.421Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"container":{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.421Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234"}},"body":{},"metadata":{"comment":"This is my File","mediaType":"text/plain"},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/att5678"}}Status
                                                   400Returned if the attachment id or the attachment version number are invalid.Status
                                                   403Returned if you are not permitted to update or move the attachment to a different container.Status
                                                   404Returned if no attachment is found for the attachmentId.Status
                                                   409Returned if the version of the supplied Attachment does not match the exact version of the Attachment stored in the database.</description></method><method name="Update dataPOST /rest/content/{id}/child/attachment/{attachmentId}/data"><description>Update the binary data of an Attachment, and optionally the comment and the minor edit field.This adds a new version of the attachment, containing the new binary data, filename, and content-type.When updating the binary data of an attachment, the comment related to it together with the field that
                                 specifies if it's a minor edit can be updated as well, but are not required.
                                 If an update is considered to be a minor edit, notifications will not be sent to the watchers of that content.This resource expects a multipart post. The media-type multipart/form-data is defined in RFC 1867. Most client
                                 libraries have classes that make dealing with multipart posts simple. For instance, in Java the Apache HTTP Components
                                 library provides aMultiPartEntitythat makes it simple to submit a multipart POST.In order to protect against XSRF attacks, because this method accepts multipart/form-data, it has XSRF protection
                                 on it.  This means you must submit a header of X-Atlassian-Token: nocheck with the request, otherwise it will be
                                 blocked.The name of the multipart/form-data parameter that contains attachments must be "file"A simple example to upload a file called "myfile.txt" to the Attachment with id "456" in a container with id "123", with the
                                 comment updated, and minorEdit set to true:curl -D- -u admin:admin -X POST -H "X-Atlassian-Token: nocheck" -F "file=@myfile.txt" -F "minorEdit=true" -F "comment=This
                                 is my updated File" http://myhost/rest/api/content/123/child/attachment/456/dataAn example to upload the same file, with no comment:curl -D- -u admin:admin -X POST -H "X-Atlassian-Token: nocheck" -F "file=@myfile.txt" http://myhost/rest/api/content/123/child/attachment/456/dataExample request URI(s):http://example.com/rest/api/content/1234/child/attachment/5678/dataResponsesStatus
                                                   200-application/jsonExample{"results":[{"id":"att5678","type":"attachment","status":"current","title":"myfile.txt","version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.483Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[],"operations":[],"children":{},"descendants":{},"container":{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.483Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234"}},"body":{},"metadata":{"comment":"This is my File","mediaType":"text/plain"},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/att5678"}}],"size":1,"_links":{"base":"http://myhost:8080/confluence","context":"/confluence"}}Status
                                                   400Returned if the attachment id is invalid.Status
                                                   404Returned if no attachment is found for the attachmentId.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content/{id}/descendant</title><description>REST wrapper for the {@link ChildContentService}, when {@link Depth} is ALL.</description><methods><method name="DescendantsGET /rest/content/{id}/descendant"><description>Returns a map of the descendants of a piece of Content. Content can have multiple types of descendants - for example a
                                 Page can have descendants that are also Pages, but it can also have Comments and Attachments.The {@link ContentType}(s) of the descendants returned is specified by the "expand" query parameter in the request
                                 - this parameter can include expands for multiple descendant types.If no types are included in the expand parameter, the map returned will just list the descendant types that are available
                                 to be expanded for the {@link Content} referenced by the "id" path parameter.Currently the only supported descendants are comment descendants of non-comment Content.Example request URI(s):http://example.com/rest/api/content/1234/descendanthttp://example.com/rest/api/content/1234/descendant?expand=comment.body.VIEWhttp://example.com/rest/api/content/1234/descendant?expand=commentRequestquery parametersparametertypedescriptionexpandstringDefault:a comma separated list of properties to expand on the descendantsResponsesStatus
                                                   200-application/jsonExample{"page":{"results":[{"id":"1234","type":"page","status":"current","title":"Example Content title","links":{},"space":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"history":null,"version":{"by":{"type":"known","username":"username","displayName":"Full Name","userKey":"","status":null},"when":"2017-12-11T03:52:47.431Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false,"content":null},"ancestors":[{"id":"123","type":"page","status":"current","links":{},"space":null,"history":null,"version":null,"ancestors":[],"operations":[],"children":{},"descendants":{},"container":null,"body":{},"metadata":{},"extensions":{},"restrictions":{}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"body":{"view":{"representation":"view","value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","webresource":null,"content":null}},"metadata":{},"extensions":{},"restrictions":{}}],"size":1}}Returns a JSON map representing multiple ordered collections of content descendants, keyed by content typeStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Descendants of typeGET /rest/content/{id}/descendant/{type}"><description>Returns the direct descendants of a piece of Content, limited to a single descendant type.The {@link ContentType}(s) of the descendants returned is specified by the "type" path parameter in the request.Currently the only supported descendants are comment descendants of non-comment Content.Example request URI(s):http://example.com/rest/api/content/1234/descendant/commenthttp://example.com/rest/api/content/1234/descendant/comment?expand=body.VIEWhttp://example.com/rest/api/content/1234/descendant/comment?start=20&amp;limit=10Requestquery parametersparametertypedescriptionexpandstringDefault:a comma separated list of properties to expand on the descendantsstartint(optional, default: 0) the index of the first item within the result set that should be returnedlimitintDefault:25(optional, default: site limit) how many items should be returned after the start indexResponsesStatus
                                                   200-application/jsonExample{"page":{"results":[{"id":"1234","type":"page","status":"current","title":"Example Content title","links":{},"space":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"history":null,"version":{"by":{"type":"known","username":"username","displayName":"Full Name","userKey":"","status":null},"when":"2017-12-11T03:52:47.431Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false,"content":null},"ancestors":[{"id":"123","type":"page","status":"current","links":{},"space":null,"history":null,"version":null,"ancestors":[],"operations":[],"children":{},"descendants":{},"container":null,"body":{},"metadata":{},"extensions":{},"restrictions":{}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","icon":null,"description":{"plain":{"representation":"plain","value":"This is an example space","webresource":null}},"homepage":null,"links":{},"metadata":{}},"body":{"view":{"representation":"view","value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","webresource":null,"content":null}},"metadata":{},"extensions":{},"restrictions":{}}],"size":1}}Returns a JSON map representing multiple ordered collections of content descendants, keyed by content typeStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content/{id}/label</title><description>REST wrapper for the {@link ContentLabelService}.</description><methods><method name="LabelsGET /rest/content/{id}/label"><description>Returns the list of labels on a piece of Content.Example request URI(s):http://example.com/rest/api/content/1234/labelhttp://example.com/rest/api/content/1234/label?prefix=global&amp;start=0&amp;limit=200Requestquery parametersparametertypedescriptionprefixstringthe prefixes to filter the labels with {@see Label.Prefix}startintthe start point of the collection to returnlimitintDefault:200the limit of the number of labels to return, this may be restricted by fixed system limitsResponsesStatus
                                                   200-application/jsonReturns a JSON representation of the labels on a piece of contentStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Add labelsPOST /rest/content/{id}/label"><description>Adds a list of labels to the specified content.The body is the json representation of the list.RequestExample[{"prefix":"global","name":"label1"},{"prefix":"global","name":"label2"}]ResponsesStatus
                                                   200-application/jsonReturns a JSON representation of the labels on a piece of contentStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Delete label with query paramDELETE /rest/content/{id}/label"><description>Deletes a labels to the specified content.</description></method><method name="Delete labelDELETE /rest/content/{id}/label/{label}"><description>Deletes a labels to the specified content. When calling this method through REST the label parameter doesn't accept
                                 "/" characters in label names, because of security constraints. For this case please use the query parameter version of
                                 this method (/content/{id}/label?name={label}</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content/{id}/property</title><description>A REST resource for manipulating content properties.</description><methods><method name="Find allGET /rest/content/{id}/property"><description>Returns a paginated list of content properties.Example request URI:http://example.com/rest/api/content/1234/property?expand=content,versionRequestquery parametersparametertypedescriptionexpandstringa comma separated list of properties to expand on the content properties. Default value:version.startintthe start point of the collection to returnlimitintDefault:10the limit of the number of items to return, this may be restricted by fixed system limitsResponsesStatus
                                                   200-application/jsonExample{"results":[{"content":{"id":"1234","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234"}},"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234/property/example-property-key"}}],"size":1,"_links":{"base":"http://myhost:8080/confluence","context":"/confluence"}}Returns a full JSON representation of the content property listStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="CreatePOST /rest/content/{id}/property"><description>Creates a new content property.</description></method><method name="Find by keyGET /rest/content/{id}/property/{key}"><description>Returns a content property.Example request URI:http://example.com/rest/api/content/1234/property/example-property-key?expand=content,versionRequestquery parametersparametertypedescriptionexpandstringa comma separated list of properties to expand on the content properties. Default value:version.ResponsesStatus
                                                   200-application/jsonExample{"content":{"id":"1234","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234"}},"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false},"_links":{"base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234/property/example-property-key"}}Returns a full JSON representation of the content propertyStatus
                                                   404Returned if there is no content with the given id, or no property with the given key,
                                             or if the calling user does not have permission to view the content.</description></method><method name="UpdatePUT /rest/content/{id}/property/{key}"><description>Updates a content property.The body contains the representation of the content property. Must include the property id, and the new version number.
                                 Attempts to create a new content property if the given version number is 1, just like {@link #create(com.atlassian.confluence.api.model.content.id.ContentId,
                                 String, com.atlassian.confluence.api.model.content.JsonContentProperty)}.RequestExample{"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false}}ResponsesStatus
                                                   200-application/jsonExample{"content":{"id":"1234","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/1234"}},"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false},"_links":{"base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234/property/example-property-key"}}Returns a full JSON representation of a piece of contentStatus
                                                   400Returned if the given property has a different ContentId to the one in the path, or
                                             if the property has a different key to the one in the path, or the value is missing, or the value is too long.Status
                                                   403Returned if the user does not have permission to edit the content with the given ContentIdStatus
                                                   404Returned if there is no content with the given id, or no property with the given key,
                                             or if the calling user does not have permission to view the content.Status
                                                   409Returned if the given version is does not match the expected target version of the updated propertyStatus
                                                   413Returned if the value is too long.</description></method><method name="DeleteDELETE /rest/content/{id}/property/{key}"><description>Deletes a content property.</description></method><method name="CreatePOST /rest/content/{id}/property/{key}"><description>Creates a new content property.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content/{id}/restriction</title><description>Returns info about all restrictions by operation</description><methods><method name="By operationGET /rest/content/{id}/restriction/byOperation"><description>Returns info about all restrictions by operation</description></method><method name="For operationGET /rest/content/{id}/restriction/byOperation/{operationKey}"><description>Returns info about all restrictions of given operation</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>content/blueprint</title><description>Publishes a legacy draft of a Content created from a ContentBlueprint</description><methods><method name="Publish legacy draftPOST /rest/content/blueprint/instance/{draftId}"><description>Publishes a legacy draft of a Content created from a ContentBlueprint</description></method><method name="Publish shared draftPUT /rest/content/blueprint/instance/{draftId}"><description>Publishes a shared draft of a Content created from a ContentBlueprint</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>contentbody/convert/{to}</title><description>Used for converting ContentBody objects from one format to another.</description><methods><method name="ConvertPOST /rest/contentbody/convert/{to}"><description>Converts between content body representations.Not all representations can be converted to/from other formats. Supported conversions:Source RepresentationDestination Representation Supportedstorageview,export_view,styled_view,editoreditorstorageviewNoneexport_viewNonestyled_viewNoneExample request URI(s):http://example.com/rest/api/contentbody/convert/viewRequestquery parametersparametertypedescriptionexpandstringDefault:Example{"value":"&lt;p&gt;Some example body in storage format&lt;/p&gt;","representation":"storage"}ResponsesStatus
                                                   200-application/jsonExample{"value":"&lt;p&gt;Some example body in storage format&lt;/p&gt;","representation":"storage","_links":{"base":"http://myhost:8080/confluence","context":"/confluence"},"_expandable":{"content":"/rest/api/content/3604482"}}</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>group</title><description>Non-admin operations for user groups</description><methods><method name="Get groupsGET /rest/group"><description>Get a paginated collection of user groups</description></method><method name="Get groupGET /rest/group/{groupName}"><description>Get the user group with the group name</description></method><method name="Get membersGET /rest/group/{groupName}/member"><description>Get a paginated collection of users in the given group</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>longtask</title><description>REST wrapper for the LongTaskService.</description><methods><method name="Get tasksGET /rest/longtask"><description>Returns information about all tracked long-running tasks.</description></method><method name="Get taskGET /rest/longtask/{id}"><description>Returns information about a long-running task.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>search</title><description>Search for entities in Confluence using theConfluence
                                 Query Language (CQL)For example :Example request URI(s):http://localhost:8080/confluence/rest/api/search?cql=creator=currentUser()&amp;type%20in%20(space,page,user)&amp;cqlcontext={%22spaceKey%22:%22TST%22,
                                 %22contentId%22:%2255%22}http://localhost:8080/confluence/rest/api/search?cql=siteSearch~'example'%20AND%20label=docs&amp;expand=content.space,space.homepage&amp;limit=10</description><methods><method name="SearchGET /rest/search"><description>Search for entities in Confluence using theConfluence
                                 Query Language (CQL)For example :Example request URI(s):http://localhost:8080/confluence/rest/api/search?cql=creator=currentUser()&amp;type%20in%20(space,page,user)&amp;cqlcontext={%22spaceKey%22:%22TST%22,
                                 %22contentId%22:%2255%22}http://localhost:8080/confluence/rest/api/search?cql=siteSearch~'example'%20AND%20label=docs&amp;expand=content.space,space.homepage&amp;limit=10</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>space</title><description>REST wrapper for the SpaceService.</description><methods><method name="SpacesGET /rest/space"><description>Returns information about a number of spaces.Example request URI(s):http://example.com/rest/api/space?spaceKey=TST&amp;spaceKey=dsRequestquery parametersparametertypedescriptionspaceKeystringa list of space keystypestringfilter the list of spaces returned by type (global, personal)statusstringfilter the list of spaces returned by status (current, archived)labelstringfilter the list of spaces returned by labelfavouritebooleanfilter the list of spaces returned by favouritesexpandstringDefault:a comma separated list of properties to expand on the spacesstartintthe start point of the collection to returnlimitintDefault:25the limit of the number of spaces to return, this may be restricted by fixed system limitsResponsesStatus
                                                   200-application/jsonReturns an array of full JSON representations of found spaces</description></method><method name="Create spacePOST /rest/space"><description>Creates a new Space.The incoming Space does not include an id, but must include a Key and Name, and should include a Description.RequestExample{"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{}}ResponsesStatus
                                                   200-application/jsonExample{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"collection":"/rest/api/space","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/space/TST"}}Returns a full JSON representation of a space</description></method><method name="Create private spacePOST /rest/space/_private"><description>Creates a new private Space, viewable only by its creator.The incoming Space does not include an id, but must include a Key and Name, and should include a Description.RequestExample{"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{}}ResponsesStatus
                                                   200-application/jsonExample{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"collection":"/rest/api/space","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/space/TST"}}Returns a full JSON representation of a space</description></method><method name="UpdatePUT /rest/space/{spaceKey}"><description>Updates a Space.Currently only the Space name, description and homepage can be updated.RequestExample{"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{}}ResponsesStatus
                                                   200-application/jsonExample{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"collection":"/rest/api/space","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/space/TST"}}Returns a full JSON representation of a spaceStatus
                                                   404Returned if there is no space with the given key, or if the calling user does not have permission to
                                             update it.</description></method><method name="DeleteDELETE /rest/space/{spaceKey}"><description>Deletes a Space.The space is deleted in a long running task, so the space cannot be considered deleted when
                                 this resource returns. Clients can follow the status link in the response and poll
                                 it until the task completes.ResponsesStatus
                                                   202-application/jsonReturns a pointer to the status of the space-deletion taskStatus
                                                   404Returned if there is no space with the given key, or if the calling user does not have permission to
                                             delete it.</description></method><method name="SpaceGET /rest/space/{spaceKey}"><description>Returns information about a space.Example request URI(s):http://example.com/rest/api/space/TST?expand=descriptionRequestquery parametersparametertypedescriptionexpandstringDefault:a comma separated list of properties to expand on the spaceResponsesStatus
                                                   200-application/jsonReturns a full JSON representation of a spaceStatus
                                                   404Returned if there is no space with the given key, or if the calling user does not have permission to
                                             view the space.</description></method><method name="ContentsGET /rest/space/{spaceKey}/content"><description>Returns the content in this given spaceExample request URI(s):http://example.com/rest/api/space/TEST/content?expand=historyRequestquery parametersparametertypedescriptiondepthstringDefault:alla string indicating if all content, or just the root content of the space is returned. Default value:all. Valid
                                          values:all, root.expandstringDefault:a comma separated list of properties to expand on each piece of content retrievedstartintthe start point of the collection to returnlimitintDefault:25the limit of the number of labels to return, this may be restricted by fixed system limitsResponsesStatus
                                                   200-application/jsonExample{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.153Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234"}}Returns a full JSON representation of a piece of contentStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method><method name="Contents with typeGET /rest/space/{spaceKey}/content/{type}"><description>Returns the content in this given space with the given typeExample request URI(s):http://example.com/rest/api/space/TEST/content/page?expand=historyRequestquery parametersparametertypedescriptiondepthstringDefault:alla string indicating if all content, or just the root content of the space is returned. Default value:all. Valid
                                          values:all, root.expandstringDefault:a comma separated list of properties to expand on each piece of content retrievedstartintthe start point of the collection to returnlimitintDefault:25the limit of the number of labels to return, this may be restricted by fixed system limitsResponsesStatus
                                                   200-application/jsonExample{"id":"1234","type":"page","status":"current","title":"Example Content title","space":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"version":{"by":{"type":"known","username":"username","userKey":"","displayName":"Full Name","_expandable":{"status":""}},"when":"2017-12-11T03:52:47.153Z","message":"change message for this edit","number":2,"minorEdit":false,"hidden":false},"ancestors":[{"id":"123","type":"page","status":"current","ancestors":[],"operations":[],"children":{},"descendants":{},"body":{},"metadata":{},"restrictions":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/content/123"}}],"operations":[],"children":{},"descendants":{},"container":{"id":11,"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"body":{"view":{"value":"&lt;p&gt;&lt;h1&gt;Example&lt;/h1&gt;Some example content body&lt;/p&gt;","representation":"view","_expandable":{"content":"/rest/api/content/1234"}}},"metadata":{},"restrictions":{},"_links":{"collection":"/rest/api/content","base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/api/content/1234"}}Returns a full JSON representation of a piece of contentStatus
                                                   404Returned if there is no content with the given id, or if the calling user does not have permission to
                                             view the content.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>space/{spaceKey}/property</title><description>A REST resource for manipulating space properties.</description><methods><method name="GetGET /rest/space/{spaceKey}/property"><description>Returns a paginated list of space properties.Example request URI:http://example.com/rest/experimental/space/TST/property?expand=space,versionRequestquery parametersparametertypedescriptionexpandstringDefault:versiona comma separated list of properties to expand on the space properties. Default value:version.startintthe start point of the collection to returnlimitintDefault:10the limit of the number of items to return, this may be restricted by fixed system limitsResponsesStatus
                                                   200-application/jsonExample{"results":[{"space":{"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false}}],"size":1,"_links":{"base":"http://myhost:8080/confluence","context":"/confluence"}}Returns a full JSON representation of the space property listStatus
                                                   404Returned if there is no space with the given key, or if the calling user does not have permission to
                                             view the space.</description></method><method name="CreatePOST /rest/space/{spaceKey}/property"><description>Creates a new space property.</description></method><method name="GetGET /rest/space/{spaceKey}/property/{key}"><description>Returns a paginated list of space properties.Example request URI:http://example.com/rest/experimental/space/TST/property?expand=space,versionRequestquery parametersparametertypedescriptionexpandstringDefault:versiona comma separated list of properties to expand on the space properties. Default value:version.ResponsesStatus
                                                   200-application/jsonExample{"results":[{"space":{"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false}}],"size":1,"_links":{"base":"http://myhost:8080/confluence","context":"/confluence"}}Returns a full JSON representation of the space property listStatus
                                                   404Returned if there is no space with the given key, or if the calling user does not have permission to
                                             view the space.</description></method><method name="UpdatePUT /rest/space/{spaceKey}/property/{key}"><description>Updates a space property.The body contains the representation of the space property. Must include new version number.
                                 If the given version number is 1, attempts to create a new space property, just like {@link #create(String, com.atlassian.confluence.api.model.content.JsonSpaceProperty)}.RequestExample{"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false}}ResponsesStatus
                                                   200-application/jsonExample{"space":{"key":"TST","name":"Example space","description":{"plain":{"value":"This is an example space","representation":"plain"}},"metadata":{},"_links":{"self":"http://myhost:8080/confluence/rest/api/space/TST"}},"key":"example-property-key","value":{"anything":"goes"},"version":{"number":2,"minorEdit":false,"hidden":false},"_links":{"base":"http://myhost:8080/confluence","context":"/confluence"}}Returns a full JSON representation of the propertyStatus
                                                   400Returned if the given property has a different spaceKey to the one in the path, or
                                             if the property has a different key to the one in the path, or no property value was provided, or the value is too long.Status
                                                   403Returned if the user does not have permission to edit the space with the given spaceKeyStatus
                                                   404Returned if there is no space with the given spaceKey, or no property with the given key,
                                             or if the calling user does not have permission to view the space.Status
                                                   409Returned if the given version is does not match the expected target version of the updated propertyStatus
                                                   413Returned if the value is too long.</description></method><method name="DeleteDELETE /rest/space/{spaceKey}/property/{key}"><description>Deletes a space property.</description></method><method name="CreatePOST /rest/space/{spaceKey}/property/{key}"><description>Creates a new space property.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>user</title><description>Non-admin user operations</description><methods><method name="Get userGET /rest/user"><description>Get information about a user identified by either user key or username.Example request URI(s):http://example.com/rest/api/user?username=jblogshttp://example.com/rest/api/user?key=402880824ff933a4014ff9345d7c0002Requestquery parametersparametertypedescriptionkeystringuserkey of the user to request from this resourceusernamestringusername of the user to request from this resourceexpandstringproperties to expand on the userResponsesStatus
                                                   200-application/jsonExample{"type":"known","username":"jsmith","userKey":"402880824ff933a4014ff9345d7c0002","profilePicture":{"path":"/wiki/relative/avatar.png","width":48,"height":48,"isDefault":true},"displayName":"Joe Smith","_links":{"base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/experimental/user?key=402880824ff933a4014ff9345d7c0002"},"_expandable":{"status":""}}Returns a full JSON representation of a userStatus
                                                   403Returned if the calling user does not have permission to view users.Status
                                                   404Returned if a user with the given username or userkey does not exist</description></method><method name="Get anonymousGET /rest/user/anonymous"><description>Get information about the how anonymous is represented in confluenceExample request URI(s):http://example.com/rest/api/user/anonymousResponsesStatus
                                                   200-application/jsonExample{"type":"anonymous","profilePicture":{"path":"/wiki/relative/avatar.png","width":48,"height":48,"isDefault":true},"displayName":"Anonymous"}Returns a full JSON representation of a userStatus
                                                   403Returned if the calling user does not have permission to use confluence.</description></method><method name="Get currentGET /rest/user/current"><description>Get information about the current logged in user.Example request URI(s):http://example.com/rest/api/user/currentRequestquery parametersparametertypedescriptionexpandstringResponsesStatus
                                                   200-application/jsonExample{"type":"known","username":"jsmith","userKey":"402880824ff933a4014ff9345d7c0002","profilePicture":{"path":"/wiki/relative/avatar.png","width":48,"height":48,"isDefault":true},"displayName":"Joe Smith","_links":{"base":"http://myhost:8080/confluence","context":"/confluence","self":"http://myhost:8080/confluence/rest/experimental/user?key=402880824ff933a4014ff9345d7c0002"},"_expandable":{"status":""}}Returns a full JSON representation of a userStatus
                                                   403Returned if the calling user does not have permission to use confluence.</description></method><method name="Get groupsGET /rest/user/memberof"><description>Get a paginated collection of groups that the given user is a member ofExample request URI(s):http://example.com/rest/api/user/memberof?username=jblogshttp://example.com/rest/api/user/memberof?key=402880824ff933a4014ff9345d7c0002Requestquery parametersparametertypedescriptionkeystringusernamestringexpandstringstartintlimitintDefault:200ResponsesStatus
                                                   200-application/jsonExample{"results":[{"type":"group","name":"somegroup"},{"type":"group","name":"anothergroup"}],"size":2}Returns a full JSON representation of a collection of groupsStatus
                                                   403Returned if the calling user does not have permission to use confluence.</description></method></methods></docItem><docItem url="https://docs.atlassian.com/atlassian-confluence/REST/6.6.0/"><title>user/watch</title><description>Create a new watcher for the given user and content id.User is optional. If not specified, currently logged-in user will be used. Otherwise, it can be specified by either
                                 user key or username. When a user is specified and is different from the logged-in user, the logged-in user needs
                                 to be a Confluence administrator.Example request URI(s):POST http://example.com/rest/api/user/watch/content/131213POST http://example.com/rest/api/user/watch/content/131213?username=jblogsPOST http://example.com/rest/api/user/watch/content/131213?key=ff8080815a58e24c015a58e263710000Requestquery parametersparametertypedescriptionkeystringuserkey of the user to create the new watcher forusernamestringusername of the user to create the new watcher forResponsesStatus
                                                   204-application/jsonReturned if the watcher was successfully createdStatus
                                                   404Returned if no content exists for the specified content id or the calling user does not have permission to perform the operation</description><methods><method name="Add content watcherPOST /rest/user/watch/content/{contentId}"><description>Create a new watcher for the given user and content id.User is optional. If not specified, currently logged-in user will be used. Otherwise, it can be specified by either
                                 user key or username. When a user is specified and is different from the logged-in user, the logged-in user needs
                                 to be a Confluence administrator.Example request URI(s):POST http://example.com/rest/api/user/watch/content/131213POST http://example.com/rest/api/user/watch/content/131213?username=jblogsPOST http://example.com/rest/api/user/watch/content/131213?key=ff8080815a58e24c015a58e263710000Requestquery parametersparametertypedescriptionkeystringuserkey of the user to create the new watcher forusernamestringusername of the user to create the new watcher forResponsesStatus
                                                   204-application/jsonReturned if the watcher was successfully createdStatus
                                                   404Returned if no content exists for the specified content id or the calling user does not have permission to perform the operation</description></method><method name="Remove content watcherDELETE /rest/user/watch/content/{contentId}"><description>Delete an existing watcher for the given user and content id.User is optional. If not specified, currently logged-in user will be used. Otherwise, it can be specified by either
                                 user key or username. When a user is specified and is different from the logged-in user, the logged-in user needs
                                 to be a Confluence administrator.Example request URI(s):DELETE http://example.com/rest/api/user/watch/content/131213DELETE http://example.com/rest/api/user/watch/content/131213?username=jblogsDELETE http://example.com/rest/api/user/watch/content/131213?key=ff8080815a58e24c015a58e263710000Requestquery parametersparametertypedescriptionkeystringuserkey of the user to delete the watcher forusernamestringusername of the user to delete the watcher forResponsesStatus
                                                   204-application/jsonReturned if the watcher was successfully deletedStatus
                                                   404Returned if no content exists for the specified content id or the calling user does not have permission to perform the operation</description></method><method name="Is watching contentGET /rest/user/watch/content/{contentId}"><description>Get information about whether a user is watching a specified content.User is optional. If not specified, currently logged-in user will be used. Otherwise, it can be specified by either
                                 user key or username. When a user is specified and is different from the logged-in user, the logged-in user needs
                                 to be a Confluence administrator.Example request URI(s):http://example.com/rest/api/user/watch/content/131213http://example.com/rest/api/user/watch/content/131213?username=jblogshttp://example.com/rest/api/user/watch/content/131213?key=ff8080815a58e24c015a58e263710000Requestquery parametersparametertypedescriptionkeystringuserkey of the user to check for watching stateusernamestringusername of the user to check for watching stateResponsesStatus
                                                   200-application/jsonExample{"watching":true}Returns a JSON representation containing the watching stateStatus
                                                   404Returned if no content exists for the specified content id or calling user does not have permission to perform the operation</description></method><method name="Add space watchPOST /rest/user/watch/space/{spaceKey}"><description>Create a new watcher for the given user and space key.User is optional. If not specified, currently logged-in user will be used. Otherwise, it can be specified by either
                                 user key or username. When a user is specified and is different from the logged-in user, the logged-in user needs
                                 to be a Confluence administrator.Example request URI(s):POST http://example.com/rest/api/user/watch/space/SPACEKEYPOST http://example.com/rest/api/user/watch/space/SPACEKEY?username=jblogsPOST http://example.com/rest/api/user/watch/space/SPACEKEY?key=ff8080815a58e24c015a58e263710000Requestquery parametersparametertypedescriptionkeystringuserKey of the user to create the new watcher forusernamestringuserName of the user to create the new watcher forResponsesStatus
                                                   200-application/jsonReturned if the watcher was successfully createdStatus
                                                   404Returned if space exists for the specified space key or if the calling user does not have permission to perform the operation</description></method><method name="Remove space watchDELETE /rest/user/watch/space/{spaceKey}"><description>Delete an existing watcher for the given user and space key.User is optional. If not specified, currently logged-in user will be used. Otherwise, it can be specified by either
                                 user key or username. When a user is specified and is different from the logged-in user, the logged-in user needs
                                 to be a Confluence administrator.Example request URI(s):DELETE http://example.com/rest/api/user/watch/space/SPACEKEYDELETE http://example.com/rest/api/user/watch/space/SPACEKEY?username=jblogsDELETE http://example.com/rest/api/user/watch/space/SPACEKEY?key=ff8080815a58e24c015a58e263710000Requestquery parametersparametertypedescriptionkeystringuserkey of the user to delete the watcher forusernamestringusername of the user to delete the watcher forResponsesStatus
                                                   204-application/jsonReturned if the watcher was successfully deletedStatus
                                                   404Returned if no content exists for the specified space key or the calling user does not have permission to perform the operation</description></method><method name="Is watching spaceGET /rest/user/watch/space/{spaceKey}"><description>Get information about whether a user is watching a specified space.User is optional. If not specified, currently logged-in user will be used. Otherwise, it can be specified by either
                                 user key or username. When a user is specified and is different from the logged-in user, the logged-in user needs
                                 to be a Confluence administrator.Example request URI(s):http://example.com/rest/api/user/watch/space/SPACEKEYhttp://example.com/rest/api/user/watch/space/SPACEKEY?username=jblogshttp://example.com/rest/api/user/watch/space/SPACEKEY?key=ff8080815a58e24c015a58e263710000Requestquery parametersparametertypedescriptionkeystringuserkey of the user to check for watching stateusernamestringusername of the user to check for watching stateResponsesStatus
                                                   200-application/jsonExample{"watching":true}Returns a JSON representation containing the watching stateStatus
                                                   404Returned if no space exists for the specified space key or the calling user does not have permission to perform the operation</description></method></methods></docItem></documentation>